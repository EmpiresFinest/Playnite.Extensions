# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'Playnite.Extensions.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- checkout: self
  clean: true
  
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $A = "DLSiteMetadata", "ExtensionUpdater","F95ZoneMetadata","JastusaMetadata","VNDBMetadata", "ExtensionUpdater"
      
      $configuration = "$(buildConfiguration)"
      $output = "$(Build.ArtifactStagingDirectory)"
      
      foreach($element in $A) {
          $currentPath = "$(Build.SourcesDirectory)"
          $inputPath = $currentPath+"\"+$element+"\bin\"+$configuration
          xcopy.exe $inputPath\*.dll $output\$element\ /Y /c
          xcopy.exe $inputPath\*.pdb $output\$element\ /Y /c
          xcopy.exe $inputPath\extension.yaml $output\$element\ /Y /c
          xcopy.exe $inputPath\icon.png $output\$element\ /Y /c
      }
      
      exit 0
    errorActionPreference: 'continue'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: drop